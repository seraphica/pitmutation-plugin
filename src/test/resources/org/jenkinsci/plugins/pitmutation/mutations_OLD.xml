<?xml version="1.0" encoding="UTF-8"?>
<mutations>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>addNewPermission</mutatedMethod>
        <methodDescription>(Lcom/awesomeness/dummy/party/LetsPartyService;)V</methodDescription>
        <lineNumber>980</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>11</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>addNewPermission</mutatedMethod>
        <methodDescription>(Lcom/awesomeness/dummy/party/LetsPartyService;)V</methodDescription>
        <lineNumber>978</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
        <index>6</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>addProfile</mutatedMethod>
        <methodDescription>
            (Lcom/awesomeness/dummy/party/PartyPermission;)Lcom/awesomeness/dummy/AnotherGreatIdea;
        </methodDescription>
        <lineNumber>434</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>40</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>addProfile</mutatedMethod>
        <methodDescription>
            (Lcom/awesomeness/dummy/party/PartyPermission;)Lcom/awesomeness/dummy/AnotherGreatIdea;
        </methodDescription>
        <lineNumber>455</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
        <index>133</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>addProfile</mutatedMethod>
        <methodDescription>
            (Lcom/awesomeness/dummy/party/PartyPermission;)Lcom/awesomeness/dummy/AnotherGreatIdea;
        </methodDescription>
        <lineNumber>432</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
        <index>34</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>addProfile</mutatedMethod>
        <methodDescription>
            (Lcom/awesomeness/dummy/party/PartyPermission;)Lcom/awesomeness/dummy/AnotherGreatIdea;
        </methodDescription>
        <lineNumber>435</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
        <index>46</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>addProfile</mutatedMethod>
        <methodDescription>
            (Lcom/awesomeness/dummy/party/PartyPermission;)Lcom/awesomeness/dummy/AnotherGreatIdea;
        </methodDescription>
        <lineNumber>437</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
        <index>55</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>addProfile</mutatedMethod>
        <methodDescription>
            (Lcom/awesomeness/dummy/party/PartyPermission;)Lcom/awesomeness/dummy/AnotherGreatIdea;
        </methodDescription>
        <lineNumber>438</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
        <index>59</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>addProfile</mutatedMethod>
        <methodDescription>
            (Lcom/awesomeness/dummy/party/PartyPermission;)Lcom/awesomeness/dummy/AnotherGreatIdea;
        </methodDescription>
        <lineNumber>454</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
        <index>129</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>allProfilesAreAlreadyDefined</mutatedMethod>
        <methodDescription>(Lcom/awesomeness/dummy/AwesomenessPermission;Ljava/util/List;)Z</methodDescription>
        <lineNumber>782</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator>
        <index>6</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>allProfilesAreAlreadyDefined</mutatedMethod>
        <methodDescription>(Lcom/awesomeness/dummy/AwesomenessPermission;Ljava/util/List;)Z</methodDescription>
        <lineNumber>793</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator>
        <index>53</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>allProfilesAreAlreadyDefined</mutatedMethod>
        <methodDescription>(Lcom/awesomeness/dummy/AwesomenessPermission;Ljava/util/List;)Z</methodDescription>
        <lineNumber>782</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>6</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>allProfilesAreAlreadyDefined</mutatedMethod>
        <methodDescription>(Lcom/awesomeness/dummy/AwesomenessPermission;Ljava/util/List;)Z</methodDescription>
        <lineNumber>790</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>32</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>allProfilesAreAlreadyDefined</mutatedMethod>
        <methodDescription>(Lcom/awesomeness/dummy/AwesomenessPermission;Ljava/util/List;)Z</methodDescription>
        <lineNumber>793</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>53</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>allProfilesAreAlreadyDefined</mutatedMethod>
        <methodDescription>(Lcom/awesomeness/dummy/AwesomenessPermission;Ljava/util/List;)Z</methodDescription>
        <lineNumber>783</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
        <index>10</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>allProfilesAreAlreadyDefined</mutatedMethod>
        <methodDescription>(Lcom/awesomeness/dummy/AwesomenessPermission;Ljava/util/List;)Z</methodDescription>
        <lineNumber>793</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
        <index>61</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>appendProfileChangedNotification</mutatedMethod>
        <methodDescription>
            (Lcom/awesomeness/dummy/AwesomenessProfile;Ljava/util/Set;Lcom/awesomeness/dummy/AwesomenessPermission;Lcom/awesomeness/dummy/AwesomenessProfile;)Ljava/lang/String;
        </methodDescription>
        <lineNumber>1603</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
        <index>32</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>appendTitlesChangedNotification</mutatedMethod>
        <methodDescription>
            (Ljava/util/List;Ljava/util/Set;Ljava/lang/String;Lcom/awesomeness/dummy/AwesomenessPermission;Lcom/awesomeness/dummy/AwesomenessProfile;)Ljava/lang/String;
        </methodDescription>
        <lineNumber>1610</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator>
        <index>18</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>appendTitlesChangedNotification</mutatedMethod>
        <methodDescription>
            (Ljava/util/List;Ljava/util/Set;Ljava/lang/String;Lcom/awesomeness/dummy/AwesomenessPermission;Lcom/awesomeness/dummy/AwesomenessProfile;)Ljava/lang/String;
        </methodDescription>
        <lineNumber>1610</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>18</index>
        <killingTest/>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>appendTitlesChangedNotification</mutatedMethod>
        <methodDescription>
            (Ljava/util/List;Ljava/util/Set;Ljava/lang/String;Lcom/awesomeness/dummy/AwesomenessPermission;Lcom/awesomeness/dummy/AwesomenessProfile;)Ljava/lang/String;
        </methodDescription>
        <lineNumber>1612</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>30</index>
        <killingTest/>
    </mutation>
    <mutation detected='true' status='KILLED'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>canDecisionBeDeleted</mutatedMethod>
        <methodDescription>(Lpl/com/awesomeness/dummy/party/TotallyAwesomeClass;)Ljava/lang/Boolean;
        </methodDescription>
        <lineNumber>2399</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>13</index>
        <killingTest>
            com.awesomeness.dummy.ImportantServiceImplMockTest.shouldShowConfirmationPopupWhenStatusChange(com.awesomeness.dummy.ImportantServiceImplMockTest)
        </killingTest>
    </mutation>
    <mutation detected='true' status='KILLED'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>canDecisionBeDeleted</mutatedMethod>
        <methodDescription>(Lpl/com/awesomeness/dummy/party/TotallyAwesomeClass;)Ljava/lang/Boolean;
        </methodDescription>
        <lineNumber>2399</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>16</index>
        <killingTest>
            com.awesomeness.dummy.ImportantServiceImplMockTest.shouldShowConfirmationPopupWhenStatusChange(com.awesomeness.dummy.ImportantServiceImplMockTest)
        </killingTest>
    </mutation>
    <mutation detected='true' status='KILLED'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>canDecisionBeDeleted</mutatedMethod>
        <methodDescription>(Lpl/com/awesomeness/dummy/party/TotallyAwesomeClass;)Ljava/lang/Boolean;
        </methodDescription>
        <lineNumber>2399</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>19</index>
        <killingTest>
            com.awesomeness.dummy.ImportantServiceImplMockTest.shouldShowConfirmationPopupWhenStatusChange(com.awesomeness.dummy.ImportantServiceImplMockTest)
        </killingTest>
    </mutation>
    <mutation detected='true' status='KILLED'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>canDecisionBeDeleted</mutatedMethod>
        <methodDescription>(Lpl/com/awesomeness/dummy/party/TotallyAwesomeClass;)Ljava/lang/Boolean;
        </methodDescription>
        <lineNumber>2399</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>22</index>
        <killingTest>
            com.awesomeness.dummy.ImportantServiceImplMockTest.shouldShowConfirmationPopupWhenStatusChange(com.awesomeness.dummy.ImportantServiceImplMockTest)
        </killingTest>
    </mutation>
    <mutation detected='false' status='SURVIVED'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>canDecisionBeDeleted</mutatedMethod>
        <methodDescription>(Lpl/com/awesomeness/dummy/party/TotallyAwesomeClass;)Ljava/lang/Boolean;
        </methodDescription>
        <lineNumber>2402</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>37</index>
        <killingTest/>
    </mutation>
    <mutation detected='true' status='KILLED'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>canDecisionBeDeleted</mutatedMethod>
        <methodDescription>(Lpl/com/awesomeness/dummy/party/TotallyAwesomeClass;)Ljava/lang/Boolean;
        </methodDescription>
        <lineNumber>2403</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>45</index>
        <killingTest>
            com.awesomeness.dummy.ImportantServiceImplMockTest.shouldShowConfirmationPopupWhenStatusChange(com.awesomeness.dummy.ImportantServiceImplMockTest)
        </killingTest>
    </mutation>
    <mutation detected='true' status='KILLED'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>canDecisionBeDeleted</mutatedMethod>
        <methodDescription>(Lpl/com/awesomeness/dummy/party/TotallyAwesomeClass;)Ljava/lang/Boolean;
        </methodDescription>
        <lineNumber>2404</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>63</index>
        <killingTest>
            com.awesomeness.dummy.ImportantServiceImplMockTest.shouldShowConfirmationPopupWhenStatusChange(com.awesomeness.dummy.ImportantServiceImplMockTest)
        </killingTest>
    </mutation>
    <mutation detected='true' status='KILLED'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>canDecisionBeDeleted</mutatedMethod>
        <methodDescription>(Lpl/com/awesomeness/dummy/party/TotallyAwesomeClass;)Ljava/lang/Boolean;
        </methodDescription>
        <lineNumber>2405</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>75</index>
        <killingTest>
            com.awesomeness.dummy.ImportantServiceImplMockTest.shouldShowConfirmationPopupWhenStatusChange(com.awesomeness.dummy.ImportantServiceImplMockTest)
        </killingTest>
    </mutation>
    <mutation detected='true' status='KILLED'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>canDecisionBeDeleted</mutatedMethod>
        <methodDescription>(Lpl/com/awesomeness/dummy/party/TotallyAwesomeClass;)Ljava/lang/Boolean;
        </methodDescription>
        <lineNumber>2405</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
        <index>77</index>
        <killingTest>
            com.awesomeness.dummy.ImportantServiceImplMockTest.shouldShowConfirmationPopupWhenStatusChange(com.awesomeness.dummy.ImportantServiceImplMockTest)
        </killingTest>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>canDecisionBeDeleted</mutatedMethod>
        <methodDescription>(Lpl/com/awesomeness/dummy/party/TotallyAwesomeClass;)Ljava/lang/Boolean;
        </methodDescription>
        <lineNumber>2400</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
        <index>28</index>
        <killingTest/>
    </mutation>
    <mutation detected='true' status='KILLED'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>canDecisionBeDeleted</mutatedMethod>
        <methodDescription>(Lpl/com/awesomeness/dummy/party/TotallyAwesomeClass;)Ljava/lang/Boolean;
        </methodDescription>
        <lineNumber>2405</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
        <index>86</index>
        <killingTest>
            com.awesomeness.dummy.ImportantServiceImplMockTest.shouldShowConfirmationPopupWhenStatusChange(com.awesomeness.dummy.ImportantServiceImplMockTest)
        </killingTest>
    </mutation>
    <mutation detected='false' status='NO_COVERAGE'>
        <sourceFile>ImportantServiceImpl.java</sourceFile>
        <mutatedClass>com.awesomeness.dummy.ImportantServiceImpl</mutatedClass>
        <mutatedMethod>changeAddBuzz</mutatedMethod>
        <methodDescription>(Lcom/awesomeness/dummy/AnotherGreatIdea;)V</methodDescription>
        <lineNumber>491</lineNumber>
        <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
        <index>5</index>
        <killingTest/>
    </mutation>
</mutations>